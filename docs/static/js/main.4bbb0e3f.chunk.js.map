{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","x","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAe,SAAAS,GAAM,OAAMP,GAAN,mBAAqBO,OAC1CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAUT,EACVU,SAnBa,SAAEP,GAEvBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,OAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAMR,EAAQM,UAAU,sBACvC,4BAAIN,QCFHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAU,WAEN1B,EAAQC,GACP0B,MAAM,SAAAC,GACHX,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAIlB,CAACtB,IAEGuB,EDhByBK,CAAc5B,GAAjCa,EAFsB,EAE3BN,KAAae,EAFc,EAEdA,QAErB,OACI,qCACI,6BAAKtB,IAEHsB,GAAW,mBAAGJ,UAAU,iBAAb,wBAEb,qBAAKA,UAAU,YAAf,SAIIL,EAAOJ,KAAK,SAAAoB,GAAC,OACT,cAAC,EAAD,eAEQA,GADCA,EAAElB,aEjBlBmB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,YAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAI9B,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAGI8C,EAAWtB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAYA,GADLA,Y,MCZzBgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4bbb0e3f.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange= ( e ) => {\r\n        // console.log( e.target.value )\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2)\r\n        {\r\n            setCategories( categs => [ inputValue, ...categs ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value = { inputValue }\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = { setCategories: PropTypes.func.isRequired }\r\n\r\n","\r\n\r\nexport const getGifs = async( category ) =>\r\n{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=byZTIsd0qsCxAnRBgr24TxO9Onox03ML`\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return { \r\n            id: img.id, \r\n            title: img.title, \r\n            url: img.images?.downsized_medium.url    \r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log(id, title, url)\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={ title } className=\"animate__bounceIn\"/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React , {useState, useEffect} from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            { loading && <p className=\"animate__flash\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                // categories.map( category => (return <li key={ category }>{ category }</li>))\r\n                images.map( x => (\r\n                    <GifGridItem \r\n                        key={x.id} \r\n                        {...x}\r\n                    />\r\n                ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs(category)\r\n        .then( imgs => {\r\n            console.log(imgs)\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Ferrari']);\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>\r\n          <AddCategory setCategories={ setCategories }/>  \r\n          <hr/>\r\n          <ol>\r\n            {\r\n              // categories.map( category => (return <li key={ category }>{ category }</li>))\r\n              categories.map( category => (\r\n                <GifGrid \r\n                  key = {category}\r\n                  category = {category}\r\n                />\r\n              ))\r\n            }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}